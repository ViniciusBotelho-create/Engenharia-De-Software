{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\kauan\\\\florasentinel\\\\LoadingScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageResizer from 'react-native-image-resizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoadingScreen() {\n  var resizeImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var resizedImage = yield ImageResizer.createResizedImage(require('../../assets/logo.png'), 100, 100, 'JPEG', 100);\n        console.log(resizedImage.uri);\n      } catch (error) {\n        console.error('Erro ao redimensionar a imagem:', error);\n      }\n    });\n    return function resizeImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    resizeImage();\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(Image, {\n      style: styles.logo,\n      source: require(\"C:Userskauan\\florasentinelassetslogo.png.png\"),\n      resizeMode: \"contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#D5EBF0'\n  },\n  logo: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"names":["React","View","Image","StyleSheet","ImageResizer","jsxDEV","_jsxDEV","LoadingScreen","resizeImage","_ref","_asyncToGenerator","resizedImage","createResizedImage","require","console","log","uri","error","apply","arguments","useEffect","style","styles","container","children","logo","source","resizeMode","fileName","_jsxFileName","lineNumber","columnNumber","create","flex","alignItems","justifyContent","backgroundColor","width","height"],"sources":["C:/Users/kauan/florasentinel/LoadingScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Image, StyleSheet } from 'react-native';\r\nimport ImageResizer from 'react-native-image-resizer';\r\n\r\nexport default function LoadingScreen() {\r\n  // Redimensionar a imagem antes de carregar\r\n  const resizeImage = async () => {\r\n    try {\r\n      const resizedImage = await ImageResizer.createResizedImage(\r\n        require('../../assets/logo.png'), // Caminho da imagem original\r\n        100, // Nova largura\r\n        100, // Nova altura\r\n        'JPEG', // Formato da imagem\r\n        100 // Qualidade da imagem (0-100)\r\n      );\r\n\r\n      // Use a imagem redimensionada\r\n      console.log(resizedImage.uri); // Verifica se o caminho da imagem redimensionada está correto\r\n    } catch (error) {\r\n      console.error('Erro ao redimensionar a imagem:', error);\r\n    }\r\n  };\r\n\r\n  // Chama a função de redimensionamento quando o componente for montado\r\n  React.useEffect(() => {\r\n    resizeImage();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Exibe a imagem redimensionada */}\r\n      <Image\r\n        style={styles.logo}\r\n        source={require('C:\\Users\\kauan\\florasentinel\\assets\\logo.png.png')} // Use o caminho da imagem redimensionada\r\n        resizeMode=\"contain\"\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#D5EBF0',\r\n  },\r\n  logo: {\r\n    width: 100, // Largura da imagem redimensionada\r\n    height: 100, // Altura da imagem redimensionada\r\n  },\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAEtC,IAAMC,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,YAAY,SAASP,YAAY,CAACQ,kBAAkB,CACxDC,OAAO,CAAC,uBAAuB,CAAC,EAChC,GAAG,EACH,GAAG,EACH,MAAM,EACN,GACF,CAAC;QAGDC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACK,GAAG,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAAA,gBAfKT,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAehB;EAGDnB,KAAK,CAACoB,SAAS,CAAC,YAAM;IACpBZ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OACEF,OAAA,CAACL,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE5BlB,OAAA,CAACJ,KAAK;MACJmB,KAAK,EAAEC,MAAM,CAACG,IAAK;MACnBC,MAAM,EAAEb,OAAO,CAAC,8CAAkD,CAAE;MACpEc,UAAU,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAEA,IAAMT,MAAM,GAAGnB,UAAU,CAAC6B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EACnB,CAAC;EACDX,IAAI,EAAE;IACJY,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}